import React,{useState,useEffect,useMemo}from 'react';import{useNavigate}from 'react-router-dom';import{useTranslation}from '../hooks/useTranslation';const GrammarPage=()=>{const{t,isLoadingTranslations}=useTranslation();const navigate=useNavigate();const[allGrammarTopics,setAllGrammarTopics]=useState([]);const[loadingData,setLoadingData]=useState(true);const[error,setError]=useState(null);const difficultyOrder=['ui_difficulty_easy','ui_difficulty_medium','ui_difficulty_hard'];const[activeTab,setActiveTab]=useState(difficultyOrder[0]);useEffect(()=>{setLoadingData(true);fetch('/data/grammar_content.json').then(response=>{if(!response.ok){throw new Error(`HTTP error! status: ${response.status} - Could not load grammar content.`);}return response.json();}).then(data=>{setAllGrammarTopics(data);setLoadingData(false);}).catch(err=>{console.error("Failed to load grammar_content.json:",err);setError(err.message);setLoadingData(false);});},[]);const grammarTopicsByDifficulty=useMemo(()=>{if(loadingData||isLoadingTranslations||allGrammarTopics.length===0){return{};}return allGrammarTopics.reduce((acc,topic)=>{const difficulty=topic.difficulty||'ui_difficulty_medium';if(!acc[difficulty]){acc[difficulty]=[];}acc[difficulty].push(topic);return acc;},{});},[allGrammarTopics,loadingData,isLoadingTranslations]);const handleCardClick=(topicId)=>{navigate(`/grammar/${topicId}`);};if(isLoadingTranslations&&allGrammarTopics.length===0&&!error)return React.createElement("p",{className:"loading-message"},t('ui_loading')||'Loading translations...');if(loadingData&&!error)return React.createElement("p",{className:"loading-message"},t('ui_loading')||'Loading grammar topics...');if(error)return React.createElement("p",{className:"error-message"},t('ui_error_loading_data')||'Error loading grammar topics',": ",error);const topicsForActiveTab=grammarTopicsByDifficulty[activeTab]||[];const hasAnyTopicsAfterLoad=Object.keys(grammarTopicsByDifficulty).length>0&&Object.values(grammarTopicsByDifficulty).some(group=>group.length>0);return React.createElement("div",{className:"grammar-page-tabbed"},React.createElement("div",{className:"tab-navigation"},difficultyOrder.map(difficultyKey=>React.createElement("button",{key:difficultyKey,className:`tab-button ${activeTab===difficultyKey?'active':''}`,onClick:()=>setActiveTab(difficultyKey)},t(difficultyKey)||difficultyKey.split('_').pop()))),React.createElement("div",{className:"tab-content-area"},difficultyOrder.map(difficultyKey=>React.createElement("div",{key:difficultyKey,className:`tab-pane ${activeTab===difficultyKey?'active':''}`},activeTab===difficultyKey&&topicsForActiveTab.length>0?React.createElement("div",{className:"list-container grammar-grid"},topicsForActiveTab.map(topic=>React.createElement("div",{key:topic.id,className:"card enhanced-grammar-card clickable-card",onClick:()=>handleCardClick(topic.id),role:"link",tabIndex:0,onKeyPress:e=>{if(e.key==='Enter'||e.key===' ')handleCardClick(topic.id);}},React.createElement("div",{className:"card-content"},React.createElement("h3",null,t(topic.titleKey)||topic.id),React.createElement("p",{className:"card-snippet"},(t(topic.shortDescriptionKey||topic.explanationKey)||'View details...').substring(0,80)+'...'))))):activeTab===difficultyKey&&topicsForActiveTab.length===0?React.createElement("p",{className:"no-items-message"},t('ui_no_grammar_topics_in_difficulty')||'No grammar topics currently in this difficulty level.'):null))),!loadingData&&!isLoadingTranslations&&!hasAnyTopicsAfterLoad&&!error&&React.createElement("p",{className:"no-items-message"},t('ui_no_grammar_topics_found')||'No grammar topics found.'));};export default GrammarPage;