import React,{useState,useEffect,useMemo} from 'react';import{useNavigate}from 'react-router-dom';import{useTranslation}from '../hooks/useTranslation';const LessonsPage=()=>{const{t,isLoadingTranslations}=useTranslation();const navigate=useNavigate();const[lessonManifest,setLessonManifest]=useState([]);const[loadingData,setLoadingData]=useState(true);const[error,setError]=useState(null);const difficultyOrder=['ui_difficulty_easy','ui_difficulty_medium','ui_difficulty_hard'];const[activeTab,setActiveTab]=useState(difficultyOrder[0]);useEffect(()=>{setLoadingData(true);fetch('/data/lessons_manifest.json').then(response=>{if(!response.ok){throw new Error(`HTTP error! status: ${response.status} - Could not load lessons manifest.`);}return response.json();}).then(data=>{setLessonManifest(data);setLoadingData(false);}).catch(err=>{console.error("Failed to load lessons_manifest.json:",err);setError(err.message);setLoadingData(false);});},[]);const lessonsByDifficulty=useMemo(()=>{if(loadingData||isLoadingTranslations||lessonManifest.length===0){return{};}return lessonManifest.reduce((acc,lessonSummary)=>{const difficulty=lessonSummary.difficulty||'ui_difficulty_medium';if(!acc[difficulty]){acc[difficulty]=[];}acc[difficulty].push(lessonSummary);return acc;},{});},[lessonManifest,loadingData,isLoadingTranslations]);const handleCardClick=(lessonId)=>{navigate(`/lessons/${lessonId}`);};if(isLoadingTranslations&&lessonManifest.length===0&&!error)return React.createElement("p",{className:"loading-message"},t('ui_loading')||'Loading translations...');if(loadingData&&!error)return React.createElement("p",{className:"loading-message"},t('ui_loading')||'Loading lessons list...');if(error)return React.createElement("p",{className:"error-message"},t('ui_error_loading_data')||'Error loading lessons list',": ",error);const lessonsForActiveTab=lessonsByDifficulty[activeTab]||[];const hasAnyLessonsAfterLoad=Object.keys(lessonsByDifficulty).length>0&&Object.values(lessonsByDifficulty).some(group=>group.length>0);return React.createElement("div",{className:"lessons-page-tabbed"},React.createElement("div",{className:"tab-navigation"},difficultyOrder.map(difficultyKey=>React.createElement("button",{key:difficultyKey,className:`tab-button ${activeTab===difficultyKey?'active':''}`,onClick:()=>setActiveTab(difficultyKey)},t(difficultyKey)||difficultyKey.split('_').pop()))),React.createElement("div",{className:"tab-content-area"},difficultyOrder.map(difficultyKey=>React.createElement("div",{key:difficultyKey,className:`tab-pane ${activeTab===difficultyKey?'active':''}`},activeTab===difficultyKey&&lessonsForActiveTab.length>0?React.createElement("div",{className:"list-container lessons-grid"},lessonsForActiveTab.map(lesson=>React.createElement("div",{key:lesson.id,className:"card enhanced-lesson-card clickable-card",onClick:()=>handleCardClick(lesson.id),role:"link",tabIndex:0,onKeyPress:e=>{if(e.key==='Enter'||e.key===' ')handleCardClick(lesson.id);}},lesson.coverImage&&React.createElement("div",{className:"card-image-container"},React.createElement("img",{src:lesson.coverImage,alt:t(lesson.titleKey)||lesson.id})),React.createElement("div",{className:"card-content"},React.createElement("h3",null,t(lesson.titleKey)||lesson.id),React.createElement("p",{className:"card-snippet"},t(lesson.shortDescriptionKey)||'Click to learn more...'))))):activeTab===difficultyKey&&lessonsForActiveTab.length===0?React.createElement("p",{className:"no-items-message"},t('ui_no_lessons_found_in_difficulty')||'No lessons currently in this difficulty level.'):null))),!loadingData&&!isLoadingTranslations&&!hasAnyLessonsAfterLoad&&!error&&React.createElement("p",{className:"no-items-message"},t('ui_no_lessons_found')||'No lessons found.'));};export default LessonsPage;